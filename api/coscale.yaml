# this is an example of the CoScale API
# as a demonstration of an API spec in YAML
swagger: '2.0'
info:
  title: ""
  description: ""
  version: "1.0.0"
# the domain of the service
host: api.coscale.com
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /api/v1
produces:
  - application/json
paths:
  /users/login/:
    post:
      description: |
        Login to CoScale and receive authorization token.
      parameters:
        - name: email
          in: formData
          description: User email.
          required: true
          type: string
        - name: password
          in: formData
          description: User password.
          required: true
          type: string
          format: password
      tags:
        - Login
      responses:
        200:
          description: A token that should be used as HTTPAuthorization on all following calls.
          schema:
            type: array
            items:
              $ref: '#/definitions/Token'
        400:
          description: Invalid credentials.
          schema:
            $ref: '#/definitions/InvalidCredentials'

  /users/apps/:
    get:
      description: |
        Getting all applications for the current user.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token
          required: true
          type: string
      tags:
        - Apps
      responses:
        200:
          description: All applications for the current user.
          schema:
            type: array
            items:
              $ref: '#/definitions/Apps'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/:
    get:
      description: |
        Get app information.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
      tags:
        - Apps
      responses:
        200:
          description: The application model.
          schema:
            $ref: '#/definitions/AppModel'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servers/:
    get:
      description: |
        Get all servers for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: A list of all servers.
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Insert a new server.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the new server.
          required: true
          type: string
        - name: description
          in: formData
          description: The description of the new server.
          required: true
          type: string
        - name: type
          in: formData
          description: The type of the new server.
          required: true
          type: string
        - name: source
          in: formData
          description: "The source of the new server (Eg. API)."
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: The new server.
          schema:
            $ref: '#/definitions/Server'
        404:
          description: Application not found
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servers/{serverId}/:
    get:
      description: |
        Get a specific (defined by its id) server for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: Specific (defined by its id) server.
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        404:
          description: Application/Server not found
          schema:
            $ref: '#/definitions/InvalidServer'
        401:
          description: Token not valid
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Modify an existing server.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
        - name: name
          in: formData
          description: The new name of the server.
          required: true
          type: string
        - name: description
          in: formData
          description: The new description of the server.
          required: false
          type: string
        - name: type
          in: formData
          description: The type of the server.
          required: false
          type: string
        - name: source
          in: formData
          description: The source of the server (Eg. API).
          required: false
          type: string
        - name: state
          in: formData
          description: "The state of the server (ENABLED, INACTIVE, DISABLED)."
          required: false
          type: string
        - name: version
          in: formData
          description: "The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned."
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: Returns the updated server.
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        404:
          description: Application/Server not found.
          schema:
            $ref: '#/definitions/InvalidServer'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a specific server from the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: Returns a success message.
          schema:
            $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/Server not found
          schema:
            $ref: '#/definitions/InvalidServer'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servers/{serverId}/attributes/:
    get:
      description: |
        Get all attributes for the server.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: List of ServerAttributes.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerAttribute'
        404:
          description: Application/Server not found
          schema:
            $ref: '#/definitions/InvalidServer'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Create new attribute on server.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
        - name: key
          in: formData
          description: Key for the attribute.
          required: true
          type: string
        - name: value
          in: formData
          description: Value for the attribute.
          required: true
          type: string
        - name: source
          in: formData
          description: Describes who added the attribute.
          required: true
          type: string
        - name: locked
          in: formData
          description: "If true, the attribute cannot be changed in the frontend."
          required: true
          type: boolean
      tags:
        - Servers
      responses:
        200:
          description: Returns the server attribute.
          schema:
              $ref: '#/definitions/ServerAttribute'
        404:
          description: Application/Server not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servers/{serverId}/attributes/{attributeId}/:
    get:
      description: |
        Get a specific attribute for the server.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the attribute.
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: Server attribute.
          schema:
            $ref: '#/definitions/ServerAttribute'
        404:
          description: Application/Server/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Update a specific server attribute.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the attribute.
          required: true
          type: string
        - name: key
          in: formData
          description: Key for the attribute.
          required: false
          type: string
        - name: value
          in: formData
          description: Value for the attribute.
          required: false
          type: string
        - name: source
          in: formData
          description: Describes who added the attribute.
          required: false
          type: string
        - name: locked
          in: formData
          description: "If true, the attribute cannot be changed in the frontend."
          required: false
          type: boolean
        - name: version
          in: formData
          description: "The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned."
          required: true
          type: integer
          format: long
      tags:
        - Servers
      responses:
        200:
          description: The updated server attribute.
          schema:
            $ref: '#/definitions/ServerAttribute'
        404:
          description: Application/Server/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
        description: |
          Remove a specific server attribute.
        parameters:
          - name: HTTPAuthorization
            in: header
            description: HTTPAuthorization token.
            required: true
            type: string
          - name: appId
            in: path
            description: The uuid for the application.
            required: true
            type: string
          - name: serverId
            in: path
            description: The id of the server.
            required: true
            type: string
          - name: attributeId
            in: path
            description: The id of the attribute.
            required: true
            type: string
        tags:
          - Servers
        responses:
          200:
            description: Returns a success message.
            schema:
              type: array
              items:
                $ref: '#/definitions/DeleteSuccess'
          404:
            description: Application/Server/Attribute not found.
            schema:
              $ref: '#/definitions/InvalidApplication'
          401:
            description: Token not valid.
            schema:
              $ref: '#/definitions/InvalidToken'

  /app/{appId}/servers/{serverId}/children/:
    get:
      description: |
        Get all child servers for a given server.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: A list of Servers.
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        404:
          description: Application/Server not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servers/{serverId}/children/{childId}/:
    post:
      description: |
        Add an existing server as a child to another server.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
        - name: childId
          in: path
          description: The id of the child you want to add.
          required: true
          type: string
      tags:
        - Servers
      responses:
        200:
          description: The child server.
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        404:
          description: Application/Server not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
        description: |
          Delete a child server from parent server.
        parameters:
          - name: HTTPAuthorization
            in: header
            description: HTTPAuthorization token.
            required: true
            type: string
          - name: appId
            in: path
            description: The uuid for the application.
            required: true
            type: string
          - name: serverId
            in: path
            description: The id of the server.
            required: true
            type: string
          - name: childId
            in: path
            description: The id of the child.
            required: true
            type: string
        tags:
          - Servers
        responses:
          200:
            description: Returns a success message.
            schema:
              type: array
              items:
                $ref: '#/definitions/DeleteSuccess'
          404:
            description: Application/Server not found.
            schema:
              $ref: '#/definitions/InvalidApplication'
          401:
            description: Token not valid.
            schema:
              $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/:
    get:
      description: |
        Get all server groups for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: A list of server groups.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroups'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Insert a new server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the new server group.
          required: true
          type: string
        - name: description
          in: formData
          description: The description of the new server group.
          required: false
          type: string
        - name: type
          in: formData
          description: The type of the new server group.
          required: true
          type: string
        - name: source
          in: formData
          description: "The source of the new server group (Eg: API)."
          required: true
          type: string
        - name: parentId
          in: formData
          description: An optional parent server group of this new server group.
          required: false
          type: integer
          format: long
      tags:
        - Server groups
      responses:
        200:
          description: Returns the new sever group.
          schema:
            $ref: '#/definitions/ServerGroups'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/{groupId}/:
    get:
      description: |
        Get a specific server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: The requested server group.
          schema:
            $ref: '#/definitions/ServerGroups'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Modify an existing server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the server group.
          required: false
          type: string
        - name: description
          in: formData
          description: The description of the server group.
          required: false
          type: string
        - name: source
          in: formData
          description: "The source of the server group (Eg. API)."
          required: false
          type: string
        - name: type
          in: formData
          description: The type of the server group.
          required: false
          type: string
        - name: version
          in: formData
          description: "The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned."
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: The modified server group.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroups'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a specific server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: Success message.
          schema:
            $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/{groupId}/servers/:
    get:
      description: |
        Get all servers in the server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: A list of servers.
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        404:
          description: Application/Server not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/{groupId}/servers/{serverId}/:
    post:
      description: |
        Add an existing server to a server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: All servers in the server group.
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a server from a server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: serverId
          in: path
          description: The id of the server.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: Success message.
          schema:
            $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/Server not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/{groupId}/servergroups/:
    get:
      description: |
        Get all child server groups for a server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: A list of ServerGroups.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroups'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/{groupId}/servergroups/{childId}/:
    post:
      description: |
        Add an existing server group to another server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: childId
          in: path
          description: The id of the child server group.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: All server groups in the parent server group.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroups'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a server group from another server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: childId
          in: path
          description: The id of the child server group.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: Success message.
          schema:
            $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/{groupId}/attributes/:
    get:
      description: |
        Get all attributes for a server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: A list of ServerGroupAttributes.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroupAttribute'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Create a new attribute on a server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: key
          in: formData
          description: Key for the attribute.
          required: true
          type: string
        - name: value
          in: formData
          description: Value for the attribute.
          required: true
          type: string
        - name: source
          in: formData
          description: Describes who added the attribute.
          required: true
          type: string
        - name: locked
          in: formData
          description: "If true, the attribute cannot be changed in the frontend."
          required: true
          type: boolean
      tags:
        - Server groups
      responses:
        200:
          description: The new ServerGroupAttribute.
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroupAttribute'
        404:
          description: Application/ServerGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/servergroups/{groupId}/attributes/{attributeId}/:
    get:
      description: |
        Get a specific attribute for a server group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the server group attribute.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: The requested ServerGroupAttribute.
          schema:
            $ref: '#/definitions/ServerGroupAttribute'
        404:
          description: Application/ServerGroup/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Update a specific server group attribute.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the server group attribute.
          required: true
          type: string
        - name: key
          in: formData
          description: Key for the attribute.
          required: false
          type: string
        - name: value
          in: formData
          description: Value for the attribute.
          required: false
          type: string
        - name: source
          in: formData
          description: Describes who added the attribute.
          required: false
          type: string
        - name: locked
          in: formData
          description: "If true, the attribute cannot be changed in the frontend."
          required: false
          type: boolean
        - name: version
          in: formData
          description: "The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned."
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: The updated ServerAttribute.
          schema:
              $ref: '#/definitions/ServerGroupAttribute'
        404:
          description: Application/ServerGroup/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Remove a specific server group attribute.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the server group.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the server group attribute.
          required: true
          type: string
      tags:
        - Server groups
      responses:
        200:
          description: Success message.
          schema:
            $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/ServerGroup/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

#############################################################




  /app/{appId}/metrics/:
    get:
      description: |
        Get all metrics for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
      tags:
        - Metrics
      responses:
        200:
          description: A list of metrics.
          schema:
            type: array
            items:
              $ref: '#/definitions/Metric'
        404:
          description: Application/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Create a new metric instance.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the new metric instance.
          required: true
          type: string
        - name: description
          in: formData
          description: The description of the new metric instance.
          required: true
          type: string
        - name: dataType
          in: formData
          description: The dataType must have all letters uppercase.
          required: true
          type: string
        - name: subject
          in: formData
          description: The subject must have all letters uppercase.
          required: true
          type: string
        - name: unit
          in: formData
          description: It can be empty.
          required: false
          type: string
        - name: period
          in: formData
          description: The period in which the metric will be inserted in s.
          required: false
          type: string
        - name: source
          in: formData
          description: The source of the metric (Eg. API).
          required: true
          type: string
      tags:
        - Metrics
      responses:
        200:
          description: The new metric.
          schema:
             $ref: '#/definitions/Metric'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metrics/{metricId}/:
    get:
      description: |
        Get a specific (defined by its id) metric for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
      tags:
        - Metrics
      responses:
        200:
          description: A specific (defined by its id) metric.
          schema:
            $ref: '#/definitions/Metric'
        404:
          description: Application/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Update an existing metric.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the new metric.
          required: true
          type: string
        - name: description
          in: formData
          description: The description of the new metric.
          required: false
          type: string
        - name: dataType
          in: formData
          description: The dataType must have all letters uppercase.
          required: false
          type: string
        - name: unit
          in: formData
          description: It can be empty.
          required: false
          type: string
        - name: source
          in: formData
          description: It can be empty.
          required: false
          type: string
        - name: subject
          in: formData
          description: The subject must have all letters uppercase.
          required: false
          type: string
        - name: version
          in: formData
          description: The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned.
          required: true
          type: integer
          format: long
      tags:
        - Metrics
      responses:
        200:
          description: Returns the updated metric.
          schema:
            $ref: '#/definitions/Metric'
        404:
          description: Application/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a specific metric for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
      tags:
        - Metrics
      responses:
        200:
          description: Returns a success message.
          schema:
            type: array
            items:
              $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metrics/{metricId}/attributes/:
    get:
      description: |
        Get all attributes for a specific metric.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
      tags:
        - Metrics
      responses:
        200:
          description: A list of MetricAttributes.
          schema:
            type: array
            items:
              $ref: '#/definitions/MetricAttribute'
        404:
          description: Application/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Create new metric attribute on specific metric.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
        - name: key
          in: formData
          description: The name of the attribute.
          required: true
          type: string
        - name: value
          in: formData
          description: The value of the attribute.
          required: true
          type: string
        - name: source
          in: formData
          description: The source of the event (Eg. API).
          required: true
          type: string
        - name: locked
          in: formData
          description: The attribute can not be changed through the UI when locked.
          required: true
          type: boolean
      tags:
        - Metrics
      responses:
        200:
          description: The new MetricAttribute.
          schema:
            $ref: '#/definitions/MetricAttribute'
        404:
          description: Application/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metrics/{metricId}/attributes/{attributeId}/:
    get:
      description: |
        Get a specific metric attribute.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the metric attribute.
          required: true
          type: string
      tags:
        - Metrics
      responses:
        200:
          description: The requested MetricAttribute.
          schema:
            $ref: '#/definitions/MetricAttribute'
        404:
          description: Application/Metric/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Update an existing metric attribute.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the metric attribute.
          required: true
          type: string
        - name: key
          in: formData
          description: The name of the attribute.
          required: false
          type: string
        - name: value
          in: formData
          description: The value of the attribute.
          required: false
          type: string
        - name: source
          in: formData
          description: The source of the metric (eg. API).
          required: false
          type: string
        - name: locked
          in: formData
          description: The attribute can not be changed through the UI when locked.
          required: false
          type: boolean
        - name: version
          in: formData
          description: The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned.
          required: true
          type: integer
          format: long
      tags:
        - Metrics
      responses:
        200:
          description: The updated MetricAttribute.
          schema:
            type: array
            items:
              $ref: '#/definitions/MetricAttribute'
        404:
          description: Application/Metric/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Remove an existing metric attribute.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric.
          required: true
          type: string
        - name: attributeId
          in: path
          description: The id of the metric attribute.
          required: true
          type: string
      tags:
        - Metrics
      responses:
        200:
          description: Success message.
          schema:
            type: array
            items:
              $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/Metric/Attribute not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metricgroups/:
    get:
      description: |
        Get all metric groups for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: A list of metric groups.
          schema:
            type: array
            items:
              $ref: '#/definitions/MetricGroups'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Create a new metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the new metric group.
          required: true
          type: string
        - name: description
          in: formData
          description: The description of the new metric group.
          required: true
          type: string
        - name: type
          in: formData
          description: The type of the new metric group.
          required: true
          type: string
        - name: subject
          in: formData
          description: The subject type of the new metric group.
          required: true
          type: string
        - name: source
          in: formData
          description: The source of the new metric group (eg. API).
          required: true
          type: string
        - name: parentId
          in: formData
          description: Optional parent id of the metric group.
          required: false
          type: integer
          format: long
      tags:
        - Metric groups
      responses:
        200:
          description: Returns the new metric group.
          schema:
            $ref: '#/definitions/MetricGroups'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metricgroups/{groupId}/:
    get:
      description: |
        Get a specific (defined by its id) metric group for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: Specific (defined by its id) metric group.
          schema:
            $ref: '#/definitions/MetricGroups'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Updates existing metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the metric group.
          required: true
          type: string
        - name: description
          in: formData
          description: The description of the metric group.
          required: false
          type: string
        - name: type
          in: formData
          description: The type of the metric group.
          required: false
          type: string
        - name: source
          in: formData
          description: The source of the metric group (eg. API).
          required: false
          type: string
        - name: state
          in: formData
          description: "The state of the metric group: ENABLED, INACTIVE, DISABLED."
          required: false
          type: string
        - name: version
          in: formData
          description: The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: Returns the updated metric group.
          schema:
            $ref: '#/definitions/MetricGroups'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a specific metric group for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: Returns a success message.
          schema:
            type: array
            items:
              $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metricgroups/{groupId}/metrics/:
    get:
      description: |
        Get all metrics in the metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: A list of Metrics.
          schema:
            type: array
            items:
              $ref: '#/definitions/Metric'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metricgroups/{groupId}/metrics/{metricId}/:
    post:
      description: |
        Add an existing metric to a metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric from the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: Returns all metrics in the group.
          schema:
            type: array
            items:
              $ref: '#/definitions/Metric'
        404:
          description: Application/MetricGroup/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a metric from a metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
        - name: metricId
          in: path
          description: The id of the metric from the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: Success message
          schema:
            type: array
            items:
              $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/MetricGroup/Metric not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metricgroups/{groupId}/metricgroups/:
    get:
      description: |
        Get all child metric groups for a metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: A list of metric groups.
          schema:
            type: array
            items:
              $ref: '#/definitions/MetricGroups'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/metricgroups/{groupId}/metricgroups/{childId}/:
    post:
      description: |
       Add an existing metric group to another metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
        - name: childId
          in: path
          description: The id of the metric from the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: A list of child metric groups."
          schema:
            type: array
            items:
              $ref: '#/definitions/MetricGroups'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a metric group from another metric group.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: groupId
          in: path
          description: The id of the metric group.
          required: true
          type: string
        - name: childId
          in: path
          description: The id of the metric from the metric group.
          required: true
          type: string
      tags:
        - Metric groups
      responses:
        200:
          description: Success message.
          schema:
            type: array
            items:
              $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/MetricGroup not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

# Alerts
  /app/{appId}/alerts/:
    get:
      description: |
        Get all Alerts.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
      tags:
        - Alerts
      responses:
        200:
          description: A list of Alerts.
          schema:
            type: array
            items:
              $ref: '#/definitions/Alert'
        404:
          description: Application not found
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/alerts/{alertId}/:
    get:
      description: |
        Get a specific Alert.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: alertId
          in: path
          description: The id of the alert.
          required: true
          type: string
      tags:
        - Alerts
      responses:
        200:
          description: Specific (defined by its id) alert.
          schema:
            $ref: '#/definitions/Alert'
        404:
          description: Application/Alert not found.
          schema:
            $ref: '#/definitions/InvalidAlert'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/alerts/{alertId}/acknowledge/:
    put:
      description: |
        Acknowledge an alert.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: alertId
          in: path
          description: The id of the alert.
          required: true
          type: string
        - name: version
          in: formData
          description: The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned.
          required: true
          type: string
      tags:
        - Alerts
      responses:
        200:
          description: The acknowledged alert.
          schema:
            $ref: '#/definitions/Alert'
        404:
          description: Application/Alert not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/alerts/{alertId}/resolve/:
    put:
      description: |
        Resolve an alert.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: alertId
          in: path
          description: The id of the alert.
          required: true
          type: string
        - name: version
          in: formData
          description: "The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned."
          required: true
          type: string
      tags:
        - Alerts
      responses:
        200:
          description: The resolved alert.
          schema:
            $ref: '#/definitions/Alert'
        404:
          description: Application/Alert not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

# Events
  /app/{appId}/events/:
    get:
      description: |
        Get all event categories for the current application.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
      tags:
        - Events
      responses:
        200:
          description: A list of Events.
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Create a new event category.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the new event.
          required: true
          type: string
        - name: description
          in: formData
          description: The description of the new event.
          required: false
          type: string
        - name: attributeDescriptions
          in: formData
          description: "The attributeDescriptions of the new event."
          required: false
          type: string
        - name: icon
          in: formData
          description: The icon of the new event.
          required: false
          type: string
        - name: source
          in: formData
          description: The source of the event (eg. API).
          required: true
          type: string
      tags:
        - Events
      responses:
        200:
          description: The new event.
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/events/{eventId}/:
    get:
      description: |
        Get a specific event category (defined by its id).
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: eventId
          in: path
          description: The id of the event.
          required: true
          type: string
      tags:
        - Events
      responses:
        200:
          description: Specific (defined by its id) event.
          schema:
            $ref: '#/definitions/Event'
        404:
          description: Application/Event not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    put:
      description: |
        Update existing event category.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: eventId
          in: path
          description: The id of the event.
          required: true
          type: string
        - name: name
          in: formData
          description: The name of the event.
          required: false
          type: string
        - name: description
          in: formData
          description: The description of the event.
          required: false
          type: string
        - name: attributeDescriptions
          in: formData
          description: The attributeDescriptions of the event.
          required: false
          type: string
        - name: source
          in: formData
          description: The source of the event (eg. API).
          required: false
          type: string
        - name: subject
          in: formData
          description: The subject must have all letters uppercase.
          required: false
          type: string
        - name: version
          in: formData
          description: "The version attribute is always required and should be the same as the current version in the api, otherwise an error will be returned."
          required: true
          type: integer
          format: long
      tags:
        - Events
      responses:
        200:
          description: Returns the updated event.
          schema:
            $ref: '#/definitions/Event'
        404:
          description: Application/Event not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    delete:
      description: |
        Delete a specific event category.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: eventId
          in: path
          description: The id of the event.
          required: true
          type: string
      tags:
        - Events
      responses:
        200:
          description: Returns a success message.
          schema:
            type: array
            items:
              $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/Event not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/events/{eventId}/data/:
    get:
      description: |
        Get events from start to stop for a given event category. <br />
        If timestamp is equal to 0: it uses the current timestamp. <br />
        If timestamp is negative: seconds from the current timestamp. <br />
        The stop time is optional. Entering only a start time will give all events from that time onwards.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: eventId
          in: path
          description: The id of the event.
          required: true
          type: string
        - name: start
          in: query
          description: The start time of the event.
          required: true
          type: string
        - name: stop
          in: query
          description: The stop time of the event.
          required: false
          type: string
      tags:
        - Events
      responses:
        200:
          description: A list of EventData.
          schema:
            type: array
            items:
              $ref: '#/definitions/EventData'
        404:
          description: Application/Event not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

    post:
      description: |
        Create new event for a given event category.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: eventId
          in: path
          description: The id of the event.
          required: true
          type: string
        - name: message
          in: formData
          description: The message of the event.
          required: true
          type: string
        - name: timestamp
          in: formData
          description: The start time of the event.
          required: true
          type: integer
          format: long
        - name: stopTime
          in: formData
          description: The stop time of the event. Leave empty for an "unfinished event".
          required: false
          type: integer
          format: long
        - name: attribute
          in: formData
          description: The attributes of the event data. This is a JSON string that must match the attribute descriptions of the event.
          required: false
          type: string
        - name: subject
          in: formData
          description: The subject of the event.
          required: true
          type: string
      tags:
        - Events
      responses:
        200:
          description: The new event data.
          schema:
            $ref: '#/definitions/EventData'
        404:
          description: Application/Event not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

  /app/{appId}/events/{eventId}/data/{eventDataId}/:
    put:
      description: |
        Update an event.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: eventId
          in: path
          description: The id of the event.
          required: true
          type: string
        - name: eventDataId
          in: path
          description: The id of the data event.
          required: true
          type: string
        - name: message
          in: formData
          description: The message of the event.
          required: false
          type: string
        - name: subject
          in: formData
          description: The subject of the event.
          required: false
          type: string
        - name: timestamp
          in: formData
          description: The start time of the event.
          required: false
          type: integer
          format: long
        - name: timestamp
          in: formData
          description: The stop time of the event.
          required: false
          type: integer
          format: long
        - name: attribute
          in: formData
          description: The attributes of the event data. This is a JSON string that must match the attribute descriptions of the event.
          required: false
          type: string
        - name: version
          in: formData
          description: Version of the update.
          required: true
          type: integer
          format: long
      tags:
        - Events
      responses:
        200:
          description: The updated event data.
          schema:
            $ref: '#/definitions/EventData'
        404:
          description: Application/Event not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'
    delete:
      description: |
        Delete an event.
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: eventId
          in: path
          description: The id of the event.
          required: true
          type: string
        - name: eventDataId
          in: path
          description: The id of the data event.
          required: true
          type: string
      tags:
        - Events
      responses:
        200:
          description: Success message.
          schema:
            $ref: '#/definitions/DeleteSuccess'
        404:
          description: Application/Event not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

# Datastore
  /app/{appId}/data/:
    post:
      description: |
        Insert data into the datastore. This data can span multiple servers and server groups. Data can never span multiple applications.
      tags:
        - Metrics
      parameters:
        - name: HTTPAuthorization
          in: header
          description: HTTPAuthorization token.
          required: true
          type: string
        - name: appId
          in: path
          description: The uuid for the application.
          required: true
          type: string
        - name: body
          in: body
          description: The array of data.
          required: true
          schema:
            type: array
            $ref: "#/definitions/Values"
            $ref: "#/definitions/Data"
      responses:
        200:
          description: Success message.
          schema:
            $ref: '#/definitions/InsertSuccess'
        404:
          description: Application not found.
          schema:
            $ref: '#/definitions/InvalidApplication'
        401:
          description: Token not valid.
          schema:
            $ref: '#/definitions/InvalidToken'

definitions:
# Login
  Token:
    properties:
      token:
        type: string
        description: "A HTTPAuthorization token that can be used to authorize most other API calls."

  InvalidCredentials:
    properties:
      msg:
        type: string
        description: "The user does not exist or the password is incorrect."

# Get the apps
  Apps:
    properties:
      id:
        type: integer
        format: long
        description: "A unique identifier of the app."
      version:
        type: integer
        format: long
        description: "The version of the app."
      appId:
        type: string
        description: "A unique uuid for the app."
      alias:
        type: string
        description: "An alias that's used for this app."
      state:
        type: string
        description: "The state of the app (ENABLED, INACTIVE, DISABLED)."

  InvalidToken:
    properties:
      msg:
        type: string
        description: No valid authorization token found.

# Apps model
  AppModel:
    properties:
      id:
        type: integer
        format: long
        description: "A unique identifier of the app."
      version:
        type: integer
        format: long
        description: "The version of the app."
      name:
        type: string
        description: "The name of the app."
      appId:
        type: string
        description: "A unique identifier for the app."
      ownerId:
        type: integer
        description: "The id of the user that owns the app."
      state:
        type: string
        description: "The state of the app (ENABLED, INACTIVE, DISABLED)."
      invoiceYearly:
        type: boolean
        description: "Weather a yearly or a monthly plan has been selected."
      startType:
        type: integer
        format: long
        description: "A unix timestamp of the starttime of the app."
      endTimeFreeTrial:
        type: integer
        format: long
        description: "A Unix timestamp of the end time of the free trial."
      planId:
        type: integer
        description: "The id of the billing plan (can be null)"

  InvalidApplication:
    properties:
      msg:
        type: string
        description: "The application was not found."

# Server model
  Server:
    properties:
      id:
        type: integer
        format: long
        description: "Unique identifier."
      name:
        type: string
        description: "Name for the server."
      description:
        type: string
        description: "Description for the server."
      type:
        type: string
        description: "Describes the type of server. Can be chosen by the user."
      source:
        type: string
        description: "Describes who added the server. Can be chosen by the user."
      state:
        type: string
        description: "ENABLED: capturing data, INACTIVE: notcapturing data, DISABLED: not capturing data and not shown on the dashboard."
      version:
        type: integer
        format: long
        description: "Automatically updated on each update to the instance."

  ServerAttribute:
    properties:
      key:
        type: string
        description: "Key for the attribute. (Eg. Process)"
      value:
        type: string
        description: "Value for the attribute. (Eg. apache)"
      source:
        type: string
        description: "Describes who added the attribute. Can be chosen by the user."
      locked:
        type: boolean
        description: "If true, the attribute cannot be changed in the frontend."

  InvalidServer:
    properties:
      msg:
        type: string
        description: "The requested server was not found."

  InvalidServerGroup:
    properties:
      msg:
        type: string
        description: "The requested server group was not found."

# Metric
  Metric:
    properties:
      id:
        type: integer
        format: long
        description: "Unique identifier."
      name:
        type: string
        description: "Name for the metric."
      description:
        type: string
        description: "Description for the metric."
      dataType:
        type: string
        description: "The following data types are defined: LONG, DOUBLE, HISTOGRAM."
      unit:
        type: string
        description: "The unit for the metric. This is shown on the axis in the widgets."
      period:
        type: integer
        description: "The amount of time (in seconds) between 2 data points."
      subject:
        type: string
        description: "A metric is defined on either a SERVER, GROUP or APPLICATION. This allows for metric per server, per server group or on the whole application."
      source:
        type: string
        description: "Describes who added the event. Can be chosen by the user."
      state:
        type: string
        description: "ENABLED: capturing data, INACTIVE: notcapturing data, DISABLED: not capturing data and not shown on the dashboard."
      version:
        type: integer
        format: long
        description: "Automatically updated on each update to the instance."

  MetricAttribute:
    properties:
      key:
        type: string
        description: "Key for the attribute. (Eg. TAG)"
      value:
        type: string
        description: "Value for the attribute. (Eg. CPU)"
      source:
        type: string
        description: "Describes who added the attribute. Can be chosen by the user."
      locked:
        type: boolean
        description: "If true, the attribute cannot be changed in the frontend."


  InvalidMetric:
    properties:
      msg:
        type: string
        description: "The requested metric was not found."

  InvalidMetricGroup:
    properties:
      msg:
        type: string
        description: "The requested metric group was not found."

# Event model
  Event:
    properties:
        id:
          type: integer
          format: long
          description: "Unique identifier."
        name:
          type: string
          description: "Name for the event."
        description:
          type: string
          description: "Description for the event."
        attributeDescription:
          type: string
          description: "AttributeDescription for the event."
        type:
          type: string
          description: "Describes the type of event. Can be chosen by the user."
        source:
          type: string
          description: "Describes who added the event. Can be chosen by the user."
        state:
          type: string
          description: "ENABLED: capturing data, INACTIVE: notcapturing data, DISABLED: not capturing data and not shown on the dashboard."
        version:
          type: integer
          format: long
          description: "Automatically updated on each update to the instance."

  EventData:
    properties:
      gid:
        type: string
        description: "Unique global identifier."
      id:
        type: integer
        format: long
        description: "Unique identifier."
      applicationId:
        type: integer
        format: long
        description: "Id of the application"
      timestamp:
        type: integer
        format: long
        description: "Unix timestamp in milliseconds"
      stopTime:
        type: integer
        format: long
        description: "Unix timestamp in milliseconds"
      updateTime:
        type: integer
        format: long
        description: "Unix timestamp in milliseconds"
      message:
        type: string
        description: "The message for the event data."
      subject:
        type: string
        description: "The subject for the event data."
      attribute:
        type: string
        description: "The attributes of the event data."
      version:
        type: integer
        format: long
        description: "Automatically updated on each update to the instance."
      eventId:
        type: integer
        format: long
        description: "Id of the event category."

  InvalidEvent:
    properties:
      msg:
        type: string
        description: "The requested event was not found."

# DeleteSuccessful
  DeleteSuccess:
    properties:
      msg:
        type: string
        description: "The delete action completed successfully."

# InsertSuccessful
  InsertSuccess:
    properties:
      msg:
        type: string
        description: "The insert action completed successfully."

# Version out of date
  VersionOutdated:
    properties:
      msg:
        type: string
        description: "The supplied version is lower than the current version."

# Field is missing
  FieldMissing:
    properties:
      msg:
        type: string
        description: "Not all required properties are filled in."

# ServerGroups model
  ServerGroups:
    properties:
      id:
        type: integer
        format: long
        description: "Unique identifier"
      name:
        type: string
        description: "Name for the server group"
      description:
        type: string
        description: "Description for the server group"
      type:
        type: string
        description: "Describes the type of the server group. Can be chosen by the user"
      source:
        type: string
        description: "Describes who added the server group. Can be chosen by the user"
      state:
        type: string
        description: "ENABLED: capturing data, INACTIVE: not capturing data, DISABLED: not capturing data and not shown on the dashboard"
      version:
        type: integer
        format: long
        description: "Automatically updated on each update to the instance"

# Server group attribute
  ServerGroupAttribute:
    properties:
      key:
        type: string
        description: "Key for the attribute."
      value:
        type: string
        description: "Value for the attribute."
      source:
        type: string
        description: "Describes who added the attribute. Can be chosen by the user."
      locked:
        type: boolean
        description: "If true, the attribute cannot be changed in the frontend."

# MetricGroups model
  MetricGroups:
    properties:
      id:
        type: integer
        format: long
        description: "Unique identifier"
      name:
        type: string
        description: "Name for the metric group"
      description:
        type: string
        description: "Description for the metric group"
      type:
        type: string
        description: "Describes the type of the metric group. Can be chosen by the user"
      source:
        type: string
        description: "Describes who added the metric group. Can be chosen by the user"
      state:
        type: string
        description: "ENABLED: capturing data, INACTIVE: not capturing data, DISABLED: not capturing data and not shown on the dashboard"
      version:
        type: integer
        format: long
        description: "Automatically updated on each update to the instance"

# Alert model
  Alert:
    properties:
      id:
        type: integer
        format: long
        description: "Unique identifier"
      metricId:
        type: integer
        format: long
        description: "Id of the metric that triggered the alert"
      created:
        type: integer
        format: long
        description: "When the alert was created. (Unix timestamp in milliseconds)"
      lastOccurrence:
        type: integer
        format: long
        description: "When the alert last occurred. (Unix timestamp in milliseconds)"
      occurrences:
        type: integer
        description: "The number of times the alert occurred since it was created."
      sent:
        type: integer
        format: long
        description: "When the alert was sent to the primary contact (can be null, Unix timestamp in milliseconds)."
      backup:
        type: integer
        format: long
        description: "When the alert was sent to the backup contact (can be null, Unix timestamp in milliseconds)."
      escalation:
        type: integer
        format: long
        description: "When the alert was sent to the escalation contact (can be null, Unix timestamp in milliseconds)."
      acknowledged:
        type: integer
        format: long
        description: "When the alert was acknowledged."
      acknowledgedBy:
        type: integer
        format: long
        description: "The user id of the user that acknowledged the alert."
      resolved:
        type: integer
        format: long
        description: "When the alert was resolved."
      resolvedBy:
        type: integer
        format: long
        description: "The user id of the user that resolved the alert."
      onApp:
        type: boolean
        description: "Whether the alert was triggered on the application."
      config: 
        type: string
        description: "The config of the alert trigger."
      autoresolveMailSent:
        type: integer
        format: long
        description: "When the alert was automatically resolved and an enail was sent. (can be null, Unix timestamp in milliseconds)."
      groupId:
        type: integer
        format: long
        description: "The server group id of the group that triggered the alert (null if the alert was not triggered on a group). (Not yet used)"
      serverId:
        type: integer
        format: long
        description: "The server id of the server that triggered the alert (null if the alert was not triggered on a server). Currently all alerts are triggered on a server."
      aggregatedIntoId:
        type: integer
        format: long
        description: "The parent Alert (not yet used)."
      version:
        type: integer
        format: long
        description: "Automatically updated on each update to the instance"

  InvalidAlert:
    properties:
      msg:
        type: string
        description: "The requested alert was not found."

  MetricTags:
    properties:
      CPU:
        description: "Cpu related metrics"
      CPU_IDLE:
        description: "Cpu idle time"
      CPU_NICE:
        description: "Cpu nice time"
      CPU_SYSTEM:
        description: "Cpu system time"
      CPU_USER:
        description: "Cpu user time"
      CPU_IO:
        description: "Cpu iowait time"
      DISK:
        description: "Disk related metrics"
      DISK_READ_BYTES_PER_S:
        description: "Disk read bytes per second"
      DISK_WRITE_BYTES_PER_S:
        description: "Disk write bytes per second"
      NETWORK:
        description: "Network related metrics"
      NETWORK_IN_BYTES_PER_S:
        description: "Cpu related metrics"
      NETWORK_OUT_BYTES_PER_S:
        description: "Cpu related metrics"
      MEM:
        description: "Memory related metrics"
      MEM_FREE:
        description: "Free memory metric"

  Data:
    properties:
      metricId:
        type: integer
        format: long
        description: "The id of the metric"
      subjectId:
        type: string
        description: "The subjectId is structured as follows: s<serverId> for a server, g<servergroupId> for a server group, a for the application."
      data:
        type: array
        items:
          $ref: '#/definitions/Values'

  Values:
    properties:
      timestamp:
        type: string
      data:
        type: string

